=> Array is a reference datatype.
=> multiple value aggar apko store karna hah toh uske liye ham array use karange. 
=> array ko ham square bracket ke andar likhenge.
=> ham duplicate value bhi use kar sakhte hai array mein.
=> array mein indexing concept available hai. 
=> ordered collection of items.
=> string bhi ham stored kar sakhte hai array mein.
=> number bhi store kar sakhte hai array mein.
=> array is mutuable aap jo bhi changes karoge woh sidha original array ko hit karega.

=> Array ek reference type hai aur jitne bhi reference type hai unko ham object bol sakhte hein.
=> we will discuss about the diffrence between reference and primitive datatype. 
=> reference ka type aggar aap check karoge toh apko object milega.
=> reference datatype mein aap jo bhi changes karoge woh sidha hit karega hamara
original array mera matlab original array mein bhi aap changes dekh sakhte ho par
aisa primitive mein nahi hota hai.

=> Array mein ham jyada se jyada traditional for loop and forof loop use karte hai.


let cityName = ['mumbai','delhi','hyderabad','chennai','mumbai',12,null,undefined]
console.log(cityName)
console.log(cityName[2])
Output
------
[
  'mumbai',    'delhi',  
  'hyderabad', 'chennai',
  'mumbai',    12,       
  null,        undefined 
]

hyderabad

=> How to change the specefic in an array value using index:
---------------------------------------------------------
let cityName = ['mumbai','delhi','hyderabad','chennai','mumbai',12,null,undefined]
cityName[2] = "Hyderabad"
console.log(cityName)

Output
------
[
  'mumbai',    'delhi',  
  'Hyderabad', 'chennai',
  'mumbai',    12,       
  null,        undefined 
]

=> how to check the type of array:
-------------------------------
it will give you an object. 
console.log(typeof cityName) => object

How to check an array:
----------------------
how to check that the array we have created is actually and array or not.
console.log(Array.isArray(arrayName))


=> Methods of an array:
------------------------
=> push: hamesha last mein element to add karega
let numbers = [10,20,30,40]
numbers.push(50) => [ 10, 20, 30, 40, 50 ]

=> pop: pop element ko remove karne ke liye use hote hein. 
=> pop element ko remove karne ke baad usko return bhi karta
hai eska matlab ham us value ko save bhi kar sakhte hai.

let numbers = [10,20,30,40]
numbers.pop()
console.log(numbers) => [10,20,30]

let numbers = [10,20,30,40]
let poppedValue = numbers.pop()
console.log(poppedValue) => 40

=> unshift => starting mein element add karne ke liye use hota hai unshift.
let numbers = [10,20,30,40]
numbers.unshift(9)
console.log(numbers) => [9,10,20,30,40]

=> shift: starting se element ko remove karne ke liye ham use karenge shift.
let numbers = [10,20,30,40]
numbers.shift()
console.log(numbers) => [20,30,40]


let arrayOne = [1,2,3,4]
let arrayTwo = [...arrayOne] => using spread operator here

arrayOne.push(5)
console.log(arrayOne)
console.log(arrayTwo)

console.log(arrayOne === arrayTwo)

Output:
-------
[ 1, 2, 3, 4, 5 ]
[ 1, 2, 3, 4 ]
false

aggar mein spread operator use karaunga tab dono ko allag allag memory location milega
aur aggar yahan ham kuch bh changes karenge arrayOne mein woh sare changes reflect nahi hoga
arrayTwo mein.


ForLoop in Array:
-----------------
let arrayOne = [10,20,30,40]


for(let i=0; i<arrayOne.length; i++){
    console.log(arrayOne[i])
}

Output:
-------
10
20
30
40

Adding elements to another array by using Push:
---------------------------------------------------
for(let i=0; i<arrayOne.length; i++){
    arrayTwo.push(arrayOne[i])
}
console.log(arrayTwo)

Output:
-------
[ 10, 20, 30, 40 ]

Forof Loop for Array:
--------------------
let arrayOne = [10,20,30,40]
for(let i of arrayOne){
    console.log(i)
}

Output:
-------
10
20
30
40

forin Loop for Array:
----------------------
let arrayOne = [10,20,30,40]
for(let i in arrayOne){
    console.log(arrayOne[i])
}

Output:
-------
10
20
30
40
